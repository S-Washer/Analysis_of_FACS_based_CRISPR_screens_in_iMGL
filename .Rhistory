library(MAGeCKFlute)
library(ggplot2)
library(cowplot)
library(clusterProfiler)
library(reshape2)
library(limma)
library(dplyr)
library(tidyverse)
knitr::opts_chunk$set(echo = TRUE)
raw_reads=read.delim("PILOT006_PILOT007_Reverse_Merged.count.txt")
densityreads=raw_reads[,3:14]
densityreads=melt(densityreads)
densityreads$log10read= log10(densityreads$value)
densityplot=ggplot(densityreads,aes(x=log10read,fill=variable))+
geom_density(alpha=.25)+
xlim(0,8)+
labs(title="Mapped Read Density")
violinplot=ggplot(densityreads,aes(x=variable,y=log10read,fill=variable))+
geom_violin(alpha=0.25)+
theme(axis.text.x=element_text(angle=45,vjust=0.5))+
labs(title="Mapped Read Density - Violin")
plot(densityplot)
plot(violinplot)
PILOT006_raw_reads = raw_reads[,1:8]
colnames(PILOT006_raw_reads)=c("sgRNA","Gene","T0","UN","L20","LM","UM","T20")
densityreads006=PILOT006_raw_reads[,3:8]
densityreads006=melt(densityreads006)
densityreads006$log10read= log10(densityreads006$value)
densityplot006=ggplot(densityreads006,aes(x=log10read,fill=variable))+
geom_density(alpha=.25)+
xlim(0,8)+
labs(title="Mapped Read Density")
violinplot006=ggplot(densityreads006,aes(x=variable,y=log10read,fill=variable))+
geom_violin(alpha=0.25)+
theme(axis.text.x=element_text(angle=45,vjust=0.5))+
labs(title="Mapped Read Density - Violin")
plot(densityplot006)
plot(violinplot006)
mageck_count_files=read.delim("PILOT006_PILOT007_Reverse_Merged.countsummary.txt")
BarView(mageck_count_files,x="Label",y="GiniIndex",ylab="Gini Index",main="Evenness of sgRNA reads")
PILOT006_mageck_count_files=mageck_count_files[c(1:6),]
PILOT006_mageck_count_files$Label=c("T0","UN","L20","LM","UM","T20")
PILOT006_mageck_count_files$Label=factor(PILOT006_mageck_count_files$Label,levels=c("T0","UN","L20","LM","UM","T20"))
Gini006=BarView(PILOT006_mageck_count_files,x="Label",y="GiniIndex",ylab="Gini Index",main="Evenness of sgRNA reads")
Map006=MapRatesView(PILOT006_mageck_count_files)
PILOT007_mageck_count_files=mageck_count_files[c(7:12),]
plot_grid(MapRatesView(PILOT006_mageck_count_files),MapRatesView(PILOT007_mageck_count_files))
raw_reads
results=str_remove_all(raw_reads$sgRNA,"OTAR2065_miniKO_")
head(results)
raw_reads$sgRNA=str_remove_all(raw_reads$sgRNA,"OTAR2065_miniKO_")
head(raw_reads)
raw_reads$sgRNA=str_sub(raw_reads$sgRNA,end=-7)
raw_reads
raw_reads$sgRNA=str_sub(raw_reads$sgRNA,end=-1)
write.table=(raw_reads,file="Reverse_Merged.count.txt",sep="\t")
write.table(raw_reads,file="Reverse_Merged.count.txt",sep="\t")
write.table(raw_reads,file="Reverse_Merged.count.txt",row.names=FALSE)
raw_reads=read.delim("Reverse_Merged.count.txt")
densityreads=raw_reads[,3:14]
densityreads=melt(densityreads)
densityreads$log10read= log10(densityreads$value)
densityplot=ggplot(densityreads,aes(x=log10read,fill=variable))+
geom_density(alpha=.25)+
xlim(0,8)+
labs(title="Mapped Read Density")
violinplot=ggplot(densityreads,aes(x=variable,y=log10read,fill=variable))+
geom_violin(alpha=0.25)+
theme(axis.text.x=element_text(angle=45,vjust=0.5))+
labs(title="Mapped Read Density - Violin")
plot(densityplot)
plot(violinplot)
mageck_count_files=read.delim("Reverse_Merged.countsummary.txt")
BarView(mageck_count_files,x="Label",y="GiniIndex",ylab="Gini Index",main="Evenness of sgRNA reads")
Rep_2_mageck_count_files=mageck_count_files[c(7:12),]
Rep_2_mageck_count_files$Label=c("T0","UN","L20","LM","UM","T20")
Rep_2_mageck_count_files$Label=factor(Rep_2_mageck_count_files$Label,levels=c("T0","UN","L20","LM","UM","T20"))
plot_grid(MapRatesView(Rep_1_mageck_count_files),MapRatesView(Rep_2_mageck_count_files))
Rep_1_mageck_count_files=mageck_count_files[c(1:6),]
Rep_1_mageck_count_files$Label=c("T0","UN","L20","LM","UM","T20")
Rep_1_mageck_count_files$Label=factor(Rep_1_mageck_count_files$Label,levels=c("T0","UN","L20","LM","UM","T20"))
plot_grid(MapRatesView(Rep_1_mageck_count_files),MapRatesView(Rep_2_mageck_count_files))
sdata=ReadsgRRA("L20_T20_controlnorm.sgrna_summary.txt")
p6 = ggplot(sdata[sdata$Gene=="Intergenic",],aes(x=LFC))+
geom_density()+
theme_classic()+
labs(x="Log2FC",y="Frequency",title="Intergenic Controls Log2FC")+
theme(plot.title=element_text(hjust=0.5))+
theme(plot.title = element_text(face="bold",size=12),
axis.title = element_text(face="bold",size=12))+
xlim(c(-1,1))
print(p6)
options(ggrepel.max.overlaps = Inf)
gdata=ReadRRA("L20_T20_controlnorm.gene_summary.txt")
gdata$Rank=rank(gdata$Score)
geneList=gdata$Score
names(geneList)=gdata$id
p2=RankView(geneList,genelist = unique(gdata$id),top=5,bottom=5)+
labs(title="Rank Plot")+
theme(plot.title = element_text(face="bold",size=12),
axis.title = element_text(face="bold",size=12))
print(p2)
mageckreport=read.delim("L20_T20_controlnorm.gene_summary.txt")
write.csv(mageckreport,"L20_T20_controlnorm.gene_summary.csv")
gdata=gdata[order(gdata$Rank),]
write.csv(gdata,"L20_T20_controlnorm_gdata.csv")
print(gdata[which(gdata$FDR<0.001),],)
p3=sgRankView(sdata,top=3,bottom=5,binwidth = 0.02,interval = 0.02)+
labs(title="FDR Sig sgRNA Log2FC")+
theme(plot.title = element_text(face="bold",size=12),
axis.title = element_text(face="bold",size=12))
print(p3)
######## Looking at individual gRNA
Normalised_counts=read.delim("Reverse_Merged.count_normalized.txt")
Genes=as.vector(unique(gdata$id))
Rep1=list()
for(i in Genes){
plotname=paste("plot",i,sep="_")
data1=Normalised_counts[,c(1:2,5:8)]
data1=data1[data1$Gene==i,]
data1=melt(data1)
Rep1[[plotname]]=ggplot(data1,aes(x=variable,y=value,fill=variable))+
geom_boxplot(alpha=.25,outlier.alpha=0)+
geom_jitter(shape=16,position=position_jitter(0))+
geom_line(aes(group=sgRNA,color=sgRNA))+
geom_point()+
theme_classic()+
theme(axis.text.x = element_text(angle=45,vjust=0.5))+
labs(title=paste("Rep 1",i,sep=" "),y="Normalised Count Rep 1",x="Sample")+
theme(legend.position="none")
}
Rep2=list()
for(i in Genes){
plotname=paste("plot",i,sep="_")
data1=Normalised_counts[,c(1:2,11:14)]
data1=data1[data1$Gene==i,]
data1=melt(data1)
Rep2[[plotname]]=ggplot(data1,aes(x=variable,y=value,fill=variable))+
geom_boxplot(alpha=.25,outlier.alpha=0)+
geom_jitter(shape=16,position=position_jitter(0))+
geom_line(aes(group=sgRNA,color=sgRNA))+
geom_point()+
theme_classic()+
theme(axis.text.x = element_text(angle=45,vjust=0.5))+
labs(title=paste("Rep 2",i,sep=" "),y="Normalised Count Rep 2",x="Sample")+
theme(legend.position="none")
}
pal=c("#2C7BB6","#ABD9E9","#FDAE61","#D7191C")
Condensed_plots=list()
for(i in Genes){
plotname=paste("plot",i,sep="_")
data1=Normalised_counts[,c(1:2,5:8,11:14)]
data1=data1[data1$Gene==i,]
data1=melt(data1)
data1$variable=as.character(data1$variable)
name=str_split_fixed(data1$variable,"_",2)
data1=cbind(data1,name)
colnames(data1)=c("sgRNA","Gene","variable","value","Repeat","Bin")
data1$sgRNA=str_split_i(data1$sgRNA,"_",4)
data1$Repeat[data1$Repeat=="Rep_1"]="Repeat 1"
data1$Repeat[data1$Repeat=="Rep_2"]="Repeat 2"
data1$sgRNA[data1$sgRNA=="gRNA1"]="sgRNA 1"
data1$sgRNA[data1$sgRNA=="gRNA2"]="sgRNA 2"
data1$sgRNA[data1$sgRNA=="gRNA3"]="sgRNA 3"
data1$Bin=factor(data1$Bin,levels=c("L20","LM","UM","T20"))
data1$sgRNA_Rep=paste(data1$sgRNA,data1$Repeat,sep="_")
Condensed_plots[[plotname]]=ggplot(data1,aes(x=Bin,y=value,fill=Bin))+
geom_boxplot(alpha=.75,outlier.alpha=0)+
scale_fill_manual(values=pal)+
geom_jitter(shape=16,position=position_jitter(0))+
geom_line(aes(color=sgRNA,group = sgRNA_Rep))+
geom_point(aes(shape=Repeat))+
theme_classic()+
theme(plot.title = element_text(face="bold",size=12),
axis.title = element_text(face="bold",size=12))+
theme(axis.text.x = element_text(angle=45,vjust=0.5))+
labs(title=paste(i),y="Normalised Count",x="Sample")+
guides(fill=FALSE)
}
plot_grid(plotlist=Condensed_plots,ncol=1)
ggsave("NeuroID_L20_T20_Top_6_Enriched_T20_barplots.pdf",plot=last_plot(),dpi = 300)
View(data1)
Normalised_counts=read.delim("Reverse_Merged.count_normalized.txt")
Genes=as.vector(unique(gdata$id))
data1=Normalised_counts[,c(1:2,5:8,11:14)]
View(data1)
data1=data1[data1$Gene==i,]
data1=melt(data1)
View(data1)
data1$variable=as.character(data1$variable)
View(data1)
View(data1)
name=str_split_fixed(data1$variable,"_",3)
View(name)
name=str_split_fixed(data1$variable,"_",2)
name=str_split_fixed(data1$variable,"_",3)
data1=cbind(data1,name)
View(data1)
View(name)
View(data1)
head(data1)
colnames(data1)=c("sgRNA","Gene","variable","value","Null","Repeat","Bin")
data1$sgRNA=str_split_i(data1$sgRNA,"_",4)
View(data1)
data1=Normalised_counts[,c(1:2,5:8,11:14)]
data1=data1[data1$Gene==i,]
data1=melt(data1)
data1$variable=as.character(data1$variable)
name=str_split_fixed(data1$variable,"_",3)
data1=cbind(data1,name)
colnames(data1)=c("sgRNA","Gene","variable","value","Null","Repeat","Bin")
data1$sgRNA=str_split_i(data1$sgRNA,"_",2)
View(data1)
data1$Repeat[data1$Repeat=="Rep_1"]="Repeat 1"
data1$Repeat[data1$Repeat=="Rep_2"]="Repeat 2"
data1$sgRNA[data1$sgRNA=="gRNA1"]="sgRNA 1"
data1$sgRNA[data1$sgRNA=="gRNA2"]="sgRNA 2"
data1$sgRNA[data1$sgRNA=="gRNA3"]="sgRNA 3"
data1$Bin=factor(data1$Bin,levels=c("L20","LM","UM","T20"))
data1$sgRNA_Rep=paste(data1$sgRNA,data1$Repeat,sep="_")
Condensed_plots[[plotname]]=ggplot(data1,aes(x=Bin,y=value,fill=Bin))+
geom_boxplot(alpha=.75,outlier.alpha=0)+
scale_fill_manual(values=pal)+
geom_jitter(shape=16,position=position_jitter(0))+
geom_line(aes(color=sgRNA,group = sgRNA_Rep))+
geom_point(aes(shape=Repeat))+
theme_classic()+
theme(plot.title = element_text(face="bold",size=12),
axis.title = element_text(face="bold",size=12))+
theme(axis.text.x = element_text(angle=45,vjust=0.5))+
labs(title=paste(i),y="Normalised Count",x="Sample")+
guides(fill=FALSE)
plot_grid(plotlist=Condensed_plots,ncol=1)
View(data1)
Condensed_plots=list()
for(i in Genes){
plotname=paste("plot",i,sep="_")
data1=Normalised_counts[,c(1:2,5:8,11:14)]
data1=data1[data1$Gene==i,]
data1=melt(data1)
data1$variable=as.character(data1$variable)
name=str_split_fixed(data1$variable,"_",3)
data1=cbind(data1,name)
colnames(data1)=c("sgRNA","Gene","variable","value","Null","Repeat","Bin")
data1$sgRNA=str_split_i(data1$sgRNA,"_",2)
data1$Repeat[data1$Repeat=="Rep_1"]="Repeat 1"
data1$Repeat[data1$Repeat=="Rep_2"]="Repeat 2"
data1$sgRNA[data1$sgRNA=="gRNA1"]="sgRNA 1"
data1$sgRNA[data1$sgRNA=="gRNA2"]="sgRNA 2"
data1$sgRNA[data1$sgRNA=="gRNA3"]="sgRNA 3"
data1$Bin=factor(data1$Bin,levels=c("L20","LM","UM","T20"))
data1$sgRNA_Rep=paste(data1$sgRNA,data1$Repeat,sep="_")
Condensed_plots[[plotname]]=ggplot(data1,aes(x=Bin,y=value,fill=Bin))+
geom_boxplot(alpha=.75,outlier.alpha=0)+
scale_fill_manual(values=pal)+
geom_jitter(shape=16,position=position_jitter(0))+
geom_line(aes(color=sgRNA,group = sgRNA_Rep))+
geom_point(aes(shape=Repeat))+
theme_classic()+
theme(plot.title = element_text(face="bold",size=12),
axis.title = element_text(face="bold",size=12))+
theme(axis.text.x = element_text(angle=45,vjust=0.5))+
labs(title=paste(i),y="Normalised Count",x="Sample")+
guides(fill=FALSE)
}
plot_grid(plotlist=Condensed_plots,ncol=1)
plot_grid(plotlist=Condensed_plots,ncol=4)
plot_grid(plotlist=Condensed_plots,ncol=2)
######## Looking at individual gRNA
Normalised_counts=read.delim("Reverse_Merged.count_normalized.txt")
Genes=as.vector(unique(gdata$id))
pal=c("#2C7BB6","#ABD9E9","#FDAE61","#D7191C")
Condensed_plots=list()
for(i in Genes){
plotname=paste("plot",i,sep="_")
data1=Normalised_counts[,c(1:2,5:8,11:14)]
data1=data1[data1$Gene==i,]
data1=melt(data1)
data1$variable=as.character(data1$variable)
name=str_split_fixed(data1$variable,"_",3)
data1=cbind(data1,name)
colnames(data1)=c("sgRNA","Gene","variable","value","Null","Repeat","Bin")
data1$sgRNA=str_split_i(data1$sgRNA,"_",2)
data1$Repeat[data1$Repeat=="Rep_1"]="Repeat 1"
data1$Repeat[data1$Repeat=="Rep_2"]="Repeat 2"
data1$sgRNA[data1$sgRNA=="gRNA1"]="sgRNA 1"
data1$sgRNA[data1$sgRNA=="gRNA2"]="sgRNA 2"
data1$sgRNA[data1$sgRNA=="gRNA3"]="sgRNA 3"
data1$Bin=factor(data1$Bin,levels=c("L20","LM","UM","T20"))
data1$sgRNA_Rep=paste(data1$sgRNA,data1$Repeat,sep="_")
Condensed_plots[[plotname]]=ggplot(data1,aes(x=Bin,y=value,fill=Bin))+
geom_boxplot(alpha=.75,outlier.alpha=0)+
scale_fill_manual(values=pal)+
geom_jitter(shape=16,position=position_jitter(0))+
geom_line(aes(color=sgRNA,group = sgRNA_Rep))+
geom_point(aes(shape=Repeat))+
theme_classic()+
theme(plot.title = element_text(face="bold",size=12),
axis.title = element_text(face="bold",size=12))+
theme(axis.text.x = element_text(angle=45,vjust=0.5))+
labs(title=paste(i),y="Normalised Count",x="Sample")+
guides(fill=FALSE)
}
plot_grid(plotlist=Condensed_plots,ncol=2)
library(MAGeCKFlute)
library(ggplot2)
library(cowplot)
library(clusterProfiler)
library(reshape2)
library(limma)
library(dplyr)
library(tidyverse)
knitr::opts_chunk$set(echo = TRUE)
raw_reads=read.delim("Reverse_Merged.count.txt")
densityreads=raw_reads[,3:14]
densityreads=melt(densityreads)
densityreads$log10read= log10(densityreads$value)
densityplot=ggplot(densityreads,aes(x=log10read,fill=variable))+
geom_density(alpha=.25)+
xlim(0,8)+
labs(title="Mapped Read Density")
violinplot=ggplot(densityreads,aes(x=variable,y=log10read,fill=variable))+
geom_violin(alpha=0.25)+
theme(axis.text.x=element_text(angle=45,vjust=0.5))+
labs(title="Mapped Read Density - Violin")
plot(densityplot)
plot(violinplot)
mageck_count_files=read.delim("Reverse_Merged.countsummary.txt")
BarView(mageck_count_files,x="Label",y="GiniIndex",ylab="Gini Index",main="Evenness of sgRNA reads")
Rep_1_mageck_count_files=mageck_count_files[c(1:6),]
Rep_1_mageck_count_files$Label=c("T0","UN","L20","LM","UM","T20")
Rep_1_mageck_count_files$Label=factor(Rep_1_mageck_count_files$Label,levels=c("T0","UN","L20","LM","UM","T20"))
Rep_2_mageck_count_files=mageck_count_files[c(7:12),]
Rep_2_mageck_count_files$Label=c("T0","UN","L20","LM","UM","T20")
Rep_2_mageck_count_files$Label=factor(Rep_2_mageck_count_files$Label,levels=c("T0","UN","L20","LM","UM","T20"))
plot_grid(MapRatesView(Rep_1_mageck_count_files),MapRatesView(Rep_2_mageck_count_files))
sdata=ReadsgRRA("L20_T20_controlnorm.sgrna_summary.txt")
p1 = ggplot(sdata[sdata$Gene=="Intergenic",],aes(x=LFC))+
geom_density()+
theme_classic()+
labs(x="Log2FC",y="Frequency",title="Intergenic Controls Log2FC")+
theme(plot.title=element_text(hjust=0.5))+
theme(plot.title = element_text(face="bold",size=12),
axis.title = element_text(face="bold",size=12))+
xlim(c(-1,1))
print(p1)
options(ggrepel.max.overlaps = Inf)
gdata=ReadRRA("L20_T20_controlnorm.gene_summary.txt")
gdata$Rank=rank(gdata$Score)
geneList=gdata$Score
names(geneList)=gdata$id
p2=RankView(geneList,genelist = unique(gdata$id),top=5,bottom=5)+
labs(title="Rank Plot")+
theme(plot.title = element_text(face="bold",size=12),
axis.title = element_text(face="bold",size=12))
print(p2)
mageckreport=read.delim("L20_T20_controlnorm.gene_summary.txt")
write.csv(mageckreport,"L20_T20_controlnorm.gene_summary.csv")
gdata=gdata[order(gdata$Rank),]
write.csv(gdata,"L20_T20_controlnorm_gdata.csv")
print(gdata[which(gdata$FDR<0.001),],)
p3=sgRankView(sdata,top=3,bottom=5,binwidth = 0.02,interval = 0.02)+
labs(title="FDR Sig sgRNA Log2FC")+
theme(plot.title = element_text(face="bold",size=12),
axis.title = element_text(face="bold",size=12))
print(p3)
######## Looking at individual gRNA
Normalised_counts=read.delim("Reverse_Merged.count_normalized.txt")
Genes=as.vector(unique(gdata$id))
pal=c("#2C7BB6","#ABD9E9","#FDAE61","#D7191C")
Condensed_plots=list()
for(i in Genes){
plotname=paste("plot",i,sep="_")
data1=Normalised_counts[,c(1:2,5:8,11:14)]
data1=data1[data1$Gene==i,]
data1=melt(data1)
data1$variable=as.character(data1$variable)
name=str_split_fixed(data1$variable,"_",3)
data1=cbind(data1,name)
colnames(data1)=c("sgRNA","Gene","variable","value","Null","Repeat","Bin")
data1$sgRNA=str_split_i(data1$sgRNA,"_",2)
data1$Repeat[data1$Repeat=="Rep_1"]="Repeat 1"
data1$Repeat[data1$Repeat=="Rep_2"]="Repeat 2"
data1$sgRNA[data1$sgRNA=="gRNA1"]="sgRNA 1"
data1$sgRNA[data1$sgRNA=="gRNA2"]="sgRNA 2"
data1$sgRNA[data1$sgRNA=="gRNA3"]="sgRNA 3"
data1$Bin=factor(data1$Bin,levels=c("L20","LM","UM","T20"))
data1$sgRNA_Rep=paste(data1$sgRNA,data1$Repeat,sep="_")
Condensed_plots[[plotname]]=ggplot(data1,aes(x=Bin,y=value,fill=Bin))+
geom_boxplot(alpha=.75,outlier.alpha=0)+
scale_fill_manual(values=pal)+
geom_jitter(shape=16,position=position_jitter(0))+
geom_line(aes(color=sgRNA,group = sgRNA_Rep))+
geom_point(aes(shape=Repeat))+
theme_classic()+
theme(plot.title = element_text(face="bold",size=12),
axis.title = element_text(face="bold",size=12))+
theme(axis.text.x = element_text(angle=45,vjust=0.5))+
labs(title=paste(i),y="Normalised Count",x="Sample")+
guides(fill=FALSE)
}
plot_grid(plotlist=Condensed_plots,ncol=2)
